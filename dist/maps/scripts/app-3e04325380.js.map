{"version":3,"sources":["scripts/app.js"],"names":["angular","module","locationNavbar","NavbarController","directive","restrict","templateUrl","controller","controllerAs","bindToController","MainController","$scope","leafletDrawEvents","MapQueryService","getTopNWords","text","n","matches","wordRegExp","words","exec","word","toLowerCase","wordList","hasOwnProperty","push","sort","a","b","topWords","i","getTopNFrenquency","topFrenquency","parseDate","input","Date","parse","drawnItems","L","FeatureGroup","extend","map","tweets","lat","lng","zoom","drawOptions","position","draw","polyline","metric","polygon","showArea","drawError","color","timeout","shapeOptions","circle","clickable","marker","edit","featureGroup","remove","handle","created","e","leafletEvent","leafletObject","model","modelName","addLayer","layer","console","log","layerType","circleQuery","_latlng","_mRadius","then","result","keywords","keywordsJudge","filterBytimeResult","filterByKeywords","datefrom","document","getElementById","value","dateto","data","length","datefromdata","created_at","keywordfrom1","toString","keywordfrom2","keywordfrom3","keywordfromdata","myIcon","icon","iconUrl","iconSize","iconAnchor","markers","loc","coordinates","groupMarker","layerGroup","addTo","keywordsGroup","innerHTML","cluster","markerClusterGroup","edited","arg","deleted","layers","removeLayer","drawstart","drawstop","editstart","editstop","deletestart","deletestop","drawEvents","getAvailableEvents","forEach","eventName","$on","payload","replace","$inject","$http","Environment","long","radius","request","method","url","apiUrl","factory","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","otherwise","config","host","LocalConfig","environment","constant","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-3e04325380.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('locationDataUi', ['ngAria', 'ui.router', 'ui-leaflet']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('locationDataUi')\n    .directive('locationNavbar', locationNavbar);\n\n  /** @ngInject */\n  function locationNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n      var vm = this;\n\n    }\n  }\n\n})();\n\n(function(){\n\n    'use strict';\n\n    angular\n    .module('locationDataUi')\n    .controller('MainController', MainController);\n\n    function MainController($scope, leafletDrawEvents, MapQueryService) {\n\n        var drawnItems = new L.FeatureGroup();\n\n        angular.extend($scope, {\n            map: {\n                tweets: {\n                    lat: 41.0814,\n                    lng: -81.5190,\n                    zoom: 12\n                },\n\n/*              legend: {\n                    position: \"bottomright\",\n                    colors: [ '#FF0000', '#FF8800', '#FF0000', '#FF0000', '#FF0000'],\n                    labels: [ '1000', '500', '200', '100', '50' ]\n                },*/\n\n                drawOptions: {\n                    position: \"topleft\",\n                    draw: {\n                        polyline: {\n                            metric: false\n                        },\n                        polygon: {\n                            metric: false,\n                            showArea: true,\n                            drawError: {\n                                color: '#b00b00',\n                                timeout: 1000\n                            },\n                            shapeOptions: {\n                                color: 'blue'\n                            }\n                        },\n                        circle: {\n                            showArea: true,\n                            metric: false,\n                            shapeOptions: {\n                                color: '#662d91',\n                                clickable: true\n                            }\n                        },\n                        marker: true\n                    },\n                    edit: {\n                        featureGroup: drawnItems,\n                        remove: true\n                    }\n                }\n            }\n        });\n\n        function getColor(d) {\n            return d > 1000 ? '#800026' :\n            d > 500  ? '#BD0026' :\n            d > 200  ? '#E31A1C' :\n            d > 100  ? '#FC4E2A' :\n            d > 50   ? '#FD8D3C' :\n            d > 20   ? '#FEB24C' :\n            d > 10   ? '#FED976' :\n                       '#FFEDA0';\n                  };\n\n        function getTopNWords(text, n)\n        {\n            var wordRegExp = /\\w+(?:'\\w{1,2})?/g;\n            var words = {};\n            var matches;\n            while ((matches = wordRegExp.exec(text)) != null)\n            {\n                var word = matches[0].toLowerCase();\n                if (typeof words[word] == \"undefined\")\n                {\n                    words[word] = 1;\n                }\n                else\n                {\n                    words[word]++;\n                }\n            }\n            var wordList = [];\n            for (var word in words)\n            {\n                if (words.hasOwnProperty(word))\n                {\n                    wordList.push([word, words[word]]);\n                }\n            }\n            wordList.sort(function(a, b) { return b[1] - a[1]; });\n            var topWords = [];\n            for (var i = 0; i < n; i++)\n            {\n                topWords.push(wordList[i][0]);\n            }\n            return topWords;\n        }\n\n        function getTopNFrenquency(text, n)\n        {\n            var wordRegExp = /\\w+(?:'\\w{1,2})?/g;\n            var words = {};\n            var matches;\n            while ((matches = wordRegExp.exec(text)) != null)\n            {\n                var word = matches[0].toLowerCase();\n                if (typeof words[word] == \"undefined\")\n                {\n                    words[word] = 1;\n                }\n                else\n                {\n                    words[word]++;\n                }\n            }\n            var wordList = [];\n            for (var word in words)\n            {\n                if (words.hasOwnProperty(word))\n                {\n                    wordList.push([word, words[word]]);\n                }\n            }\n            wordList.sort(function(a, b) { return b[1] - a[1]; });\n            var topFrenquency = [];\n            for (var i = 0; i < n; i++)\n            {\n                topFrenquency.push(wordList[i][1]);\n            }\n            return topFrenquency;\n        }\n\n        function parseDate(input) {\n        return Date.parse(input)/1000; \n        }\n\n        \n\n        var handle = {\n            created: function(e,leafletEvent, leafletObject, model, modelName) {\n                drawnItems.addLayer(leafletEvent.layer);\n                console.log(e, leafletEvent, leafletObject, model, modelName);\n                //var legend = L.control({position: 'bottomright'});\n                if (leafletEvent.layerType === 'circle') {\n                    MapQueryService.circleQuery(leafletEvent.layer._latlng.lat, leafletEvent.layer._latlng.lng, leafletEvent.layer._mRadius)\n                    .then(function(result) {\n                        //Draw Here\n                        console.log(result);\n\n                        var keywords = {};\n                        var keywordsJudge = [];\n                        var filterBytimeResult = [];\n                        var filterByKeywords = [];\n\n                        var datefrom = parseDate(document.getElementById('datefrom').value);\n                        var dateto = parseDate(document.getElementById('dateto').value);\n                        for (var i=0; i<result.data.length; i++){\n                            var datefromdata = parseDate(result.data[i].created_at);\n                            if (dateto > datefromdata && datefrom < datefromdata)  {\n                                filterBytimeResult.push(result.data[i]);\n                            }\n                        }           \n                        //console.log(filterBytimeResult.length);\n\n\n                        var keywordfrom1 = document.getElementById('keywordfrom1').value.toString();\n                        var keywordfrom2 = document.getElementById('keywordfrom2').value.toString();\n                        var keywordfrom3 = document.getElementById('keywordfrom3').value.toString();\n                        for (var i=0; i<result.data.length; i++){\n                            var keywordfromdata = result.data[i].keywords.toString();\n                            if (keywordfrom1 === keywordfromdata || keywordfrom2 === keywordfromdata|| keywordfrom3 === keywordfromdata)  {\n                                filterByKeywords.push(result.data[i]);\n                            }\n                        }\n\n                        //console.log(filterByKeywords);\n\n\n\n                        if (document.getElementById('keywordfrom1').value !== \"\" || document.getElementById('keywordfrom2').value !== \"\" || document.getElementById('keywordfrom3').value !== \"\")\n\n                        {\n\n                            /* This part have Keywords filter*/\n\n                            for (var i = filterByKeywords.length - 1; i >= 0; i--) {\n                            var myIcon = L.icon({\n                                iconUrl: '/images/points.png',\n                                iconSize: [10, 10],\n                                iconAnchor: [10, 10]\n                            });\n\n                            var markers = new L.marker([filterByKeywords[i].loc.coordinates[1], filterByKeywords[i].loc.coordinates[0]], {icon: myIcon});\n                            var groupMarker = L.layerGroup([markers]);\n                            groupMarker.addTo(leafletObject);\n                            //document.write(result.data[i].keywords);\n                            keywordsJudge.push(filterByKeywords[i].keywords.toString());\n                            keywords += ' ' + filterByKeywords[i].keywords.toString();\n                            //console.log(result.data[i].keywords);\n\n                        }\n\n\n                        if (keywordsJudge.length >= 10)\n                        {\n                            var topWords = getTopNWords(keywords, 10);\n                            var topFrenquency = getTopNFrenquency (keywords, 10)\n                             for (var i =  0; i <= topWords.length - 1; i++)\n                             {\n                                var keywordsGroup = 'keywords'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = topWords[i];\n                                var keywordsGroup = 'frenquency'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = topFrenquency[i];\n                             }\n\n                        }\n                        else\n                        {\n                            for (var i =  0; i <= keywordsJudge.length - 1; i++)\n                             {\n                                var keywordsGroup = 'keywords'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = keywordsJudge[i];\n                             }\n\n                        }\n\n                        }\n\n                        else\n\n                        {\n\n                            /* This part have not keywords filter*/\n\n                        if (document.getElementById('datefrom').value === \"\" || document.getElementById('dateto').value === \"\")\n\n                        {\n\n                            /* This part is not have date filter*/\n\n\n                            var cluster = L.markerClusterGroup();\n                            var groupMarker = L.layerGroup();\n\n\n                            for (var i = result.data.length - 1; i >= 0; i--) {\n                            var myIcon = L.icon({\n                                iconUrl: '/images/points.png',\n                                iconSize: [10, 10],\n                                iconAnchor: [10, 10]\n                            });\n\n                            var markers = L.marker([result.data[i].loc.coordinates[1], result.data[i].loc.coordinates[0]], {icon: myIcon});\n                            cluster.addLayer(markers);\n\n                            groupMarker.addLayer(markers);\n                            //document.write(result.data[i].keywords);\n                            keywordsJudge.push(result.data[i].keywords.toString());\n                            keywords += ' ' + result.data[i].keywords.toString();\n                            //console.log(cluster);\n                            }\n\n                          if (result.data.length > 500)\n                          {\n\n                            leafletObject.addLayer(cluster);\n                          }\n                          else\n                          {\n                            leafletObject.addLayer(groupMarker);\n                          }\n\n\n                        if (keywordsJudge.length >= 10)\n                        {\n                            var topWords = getTopNWords(keywords, 10);\n                            var topFrenquency = getTopNFrenquency (keywords, 10)\n                             for (var i =  0; i <= topWords.length - 1; i++)\n                             {\n                                var keywordsGroup = 'keywords'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = topWords[i];\n                                var keywordsGroup = 'frenquency'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = topFrenquency[i];\n                             }\n\n                        }\n                        else\n                        {\n                            for (var i =  0; i <= keywordsJudge.length - 1; i++)\n                             {\n                                var keywordsGroup = 'keywords'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = keywordsJudge[i];\n                             }\n\n                        }   \n                        }\n\n\n                        else {\n\n                            /* This part have date filter*/\n\n\n                            var cluster = L.markerClusterGroup();\n                            var groupMarker = L.layerGroup();\n\n                        for (var i = filterBytimeResult.length - 1; i >= 0; i--) {\n                            var myIcon = L.icon({\n                                iconUrl: '/images/points.png',\n                                iconSize: [10, 10],\n                                iconAnchor: [10, 10]\n                            });\n                            var markers = new L.marker([filterBytimeResult[i].loc.coordinates[1], filterBytimeResult[i].loc.coordinates[0]], {icon: myIcon});\n\n                            cluster.addLayer(markers);\n\n                            groupMarker.addLayer(markers);\n                            //document.write(result.data[i].keywords);\n                            keywordsJudge.push(filterBytimeResult[i].keywords.toString());\n                            keywords += ' ' + filterBytimeResult[i].keywords.toString();\n                            //console.log(result.data[i].keywords);\n\n                        }\n\n                          if (filterBytimeResult.length > 500)\n                          {\n                            leafletObject.addLayer(cluster);\n                          }\n                          else\n                          {\n                            leafletObject.addLayer(groupMarker);\n\n                          }\n\n\n                        if (keywordsJudge.length >= 10)\n                        {\n                            var topWords = getTopNWords(keywords, 10);\n                            var topFrenquency = getTopNFrenquency (keywords, 10)\n                             for (var i =  0; i <= topWords.length - 1; i++)\n                             {\n                                var keywordsGroup = 'keywords'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = topWords[i];\n                                var keywordsGroup = 'frenquency'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = topFrenquency[i];\n                             }\n\n                        }\n                        else\n                        {\n                            for (var i =  0; i <= keywordsJudge.length - 1; i++)\n                             {\n                                var keywordsGroup = 'keywords'+ i;\n                                keywordsGroup = document.getElementById(keywordsGroup.toString()).innerHTML = keywordsJudge[i];\n                             }\n\n                        }\n                    }\n\n                }\n\n                    \n                        \n                    });\n                }\n            },\n            edited: function(arg) {},\n            deleted: function(arg) {\n                var layers;\n                layers = arg.layers;\n                drawnItems.removeLayer(layer);\n            },\n            drawstart: function(arg) {},\n            drawstop: function(arg) {\n\n            },\n            editstart: function(arg) {},\n            editstop: function(arg) {},\n            deletestart: function(arg) {},\n            deletestop: function(arg) {}\n        };\n\n        var drawEvents = leafletDrawEvents.getAvailableEvents();\n        drawEvents.forEach(function(eventName){\n            $scope.$on('leafletDirectiveDraw.' + eventName, function(e, payload) {\n                //{leafletEvent, leafletObject, model, modelName} = payload\n                var leafletEvent, leafletObject, model, modelName; //destructuring not supported by chrome yet :(\n                leafletEvent = payload.leafletEvent, leafletObject = payload.leafletObject, model = payload.model,\n                modelName = payload.modelName;\n                handle[eventName.replace('draw:','')](e,leafletEvent, leafletObject, model, modelName);\n            });\n        });\n    };\n\n}());\n(function() {\n\n    'use strict';\n\n    angular\n    .module('locationDataUi')\n    .factory('MapQueryService', MapQueryService);\n\n    function MapQueryService($http, Environment) {\n\n        return {\n            circleQuery: circleQuery\n        }\n\n        function circleQuery(lat, long, radius) {\n            console.log(lat, long,radius);\n            var request = {\n                method: 'GET',\n                url: Environment.apiUrl + '/near/'+lat+','+long+'/'+radius\n\n            };\n\n            //router.get('/near/:lat,:long/:max?-:min?', locations.near);\n\n            return $http(request)\n            .then(function(result) {\n\n                return result;\n\n            });\n\n        }\n    }\n\n}());\n\n(function() {\n  'use strict';\n\n  angular\n    .module('locationDataUi')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('locationDataUi')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\nvar host = 'local';\n\n  angular\n    .module('locationDataUi')\n    .constant('Environment', Environment(host));\n\n    function Environment(host) {\n    \tvar LocalConfig = {\n    \t\tenvironment: 'stage',\n    \t\tapiUrl: 'http://127.0.0.1:3000/v1.0'\n    \t}\n\n    \tif (host === 'local') {\n    \t\treturn LocalConfig;\n    \t}\n    }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('locationDataUi')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n  }\n\n})();\n\nangular.module(\"locationDataUi\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-header\\\"><header class=mdl-layout__header><location-navbar></location-navbar></header><div class=mdl-layout__drawer><span class=mdl-layout-title>Sections</span><nav class=mdl-navigation><a class=mdl-navigation__link href=\\\"\\\">Map</a> <a class=mdl-navigation__link href=\\\"\\\">Data Sets</a></nav></div><main class=mdl-layout__content><div class=mdl-grid><div class=\\\"mdl-cell mdl-cell--9-col graybox\\\"><leaflet style=float:left lf-center=map.tweets lf-draw=map.drawOptions legend=map.legend height=535px width=100%></leaflet></div><div class=\\\"mdl-cell mdl-cell--3-col graybox\\\"><table class=\\\"mdl-data-table mdl-js-data-table mdl-data-table--selectable\\\"><thead><tr><th class=mdl-data-table__cell--non-numeric>Keywords</th><th>Frenquency</th></tr></thead><tbody><tr><td class=mdl-data-table__cell--non-numeric id=keywords0></td><td id=frenquency0></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords1></td><td id=frenquency1></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords2></td><td id=frenquency2></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords3></td><td id=frenquency3></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords4></td><td id=frenquency4></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords5></td><td id=frenquency5></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords6></td><td id=frenquency6></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords7></td><td id=frenquency7></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords8></td><td id=frenquency8></td></tr><tr><td class=mdl-data-table__cell--non-numeric id=keywords9></td><td id=frenquency9></td></tr></tbody></table></div><div class=\\\"mdl-cell mdl-cell--3-col graybox\\\"><table><tr><td><input id=datefrom type=text> Start (2015/10/01)</td><td><input id=dateto type=text> End (2015/10/02)</td></tr></table></div><div class=\\\"mdl-cell mdl-cell--3-col graybox\\\"><table><tr><td><input type=number step=any ng-model=map.tweets.lat> Latitude</td><td><input type=number step=any ng-model=map.tweets.lng> Longitude</td><td><input type=number step=any ng-model=map.tweets.zoom> Zoom</td></tr></table></div><!--  <div class=\\\"mdl-cell mdl-cell--3-col graybox\\\">\\n  <table>\\n      <tr>\\n        <td><input style = \\\"display: none\\\"/>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</td>\\n        <td> <input class=\\\"mdl-textfield__input\\\" id = \\'datefrom\\' type=\\\"text\\\"/> StartTime </td>\\n        <td><input type=\\\"number\\\" step=\\\"any\\\" ng-model=\\\"map.tweets.zoom\\\" /> Zoom</td>\\n      </tr>\\n    </table>\\n   </div> --><div class=\\\"mdl-cell mdl-cell--2-col graybox\\\"><table><tr><td><input style=\\\"display: none\\\">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</td></tr></table></div><div class=\\\"mdl-cell mdl-cell--1-col graybox\\\"><form action=#><div class=\\\"mdl-textfield mdl-js-textfield\\\"><input class=mdl-textfield__input type=text id=keywordfrom1><label class=mdl-textfield__label for=keywordfrom1>Keywords1...</label></div></form></div><div class=\\\"mdl-cell mdl-cell--1-col graybox\\\"><form action=#><div class=\\\"mdl-textfield mdl-js-textfield\\\"><input class=mdl-textfield__input type=text id=keywordfrom2><label class=mdl-textfield__label for=keywordfrom2>Keywords2...</label></div></form></div><div class=\\\"mdl-cell mdl-cell--1-col graybox\\\"><form action=#><div class=\\\"mdl-textfield mdl-js-textfield\\\"><input class=mdl-textfield__input type=text id=keywordfrom3><label class=mdl-textfield__label for=keywordfrom3>Keywords3...</label></div></form></div></div></main><!--   <footer class=\\\"mdl-mini-footer\\\">\\n    <div class=\\\"mdl-mini-footer__right-section\\\">\\n\\n    </div>\\n  </footer> --></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<div class=mdl-layout__header-row><!-- Title --> <span class=mdl-layout-title>Tweets Query</span><!-- Add spacer, to align navigation to the right --><div class=mdl-layout-spacer></div><!-- Navigation. We hide it in small screens. --> <button id=demo-menu-lower-right class=\\\"mdl-button mdl-js-button\\\">Query</button><ul class=\\\"mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect\\\" for=demo-menu-lower-right><li class=mdl-menu__item>Query By Name</li><li class=mdl-menu__item>Region Query</li><li class=mdl-menu__item>Disabled Action</li><li class=mdl-menu__item>Yet Another Action</li></ul></div>\");}]);"],"sourceRoot":"/source/"}